#include "game.h"
//.c中是方法的实现    \ 续航功能
//yes->1,no->0
static int IsFULL(char board[][COL],int row,int col)//static使此函数只能在本文件中使用
{
	int i=0;
	for(;i<row;i++)
	{
		int j=0;
		for(;i<col;i++)
		{
			if(board[i][j]==' ')
			{
				return 0;
			}
		}
	}
	return 1;
}


void InitBoard(char board[][COL],int row,int col)//初始化数组
{
	int i=0;
	for(;i<ROW;i++)
	{
		int j=0;
		for(;j<COL;j++)
		{
			board[i][j]=INIT;
		}
	}
}
void ShowBoard(char board[][COL],int row,int col)
{
	printf("  1|  2|  3|\n");
	printf("------------\n");
	static int i=0;
	for(i=0;i<row;i++)
	{
		int j=0;
		printf("  %d|",i);
		for(;j<col;j++)
		{
			printf("  %c|",board[i][j]);
		}
		printf("------------\n");
		printf("\n");
	}
}
char Judge(char board[][COL],int row,int col)//判定谁赢谁输
{
	int i=0;
	for(;i<row;i++)
	{
       if(board[i][0]==board[i][1]&&\
		  board[i][1]==board[i][2]&&\
		  board[i][0]!=' ')
	   {
		   return board[i][0];
	   }
	}
	for(i=0;i<col;i++)
	{
	 if(board[0][i]==board[1][i]&&\
		board[1][i]==board[2][i]&&\
		board[0][i]!=' ')
	   {
		   return board[0][i];
	   }
	}
	if(board[0][0]==board[1][1]&&board[1][1]==board[2][2]&&board[1][1]!=' ')
	{
		return board[1][1];
	}
	if(board[0][2]==board[1][1]&&board[1][1]&&board[2][0]&&board[0][2]!=' ')
	{
		return board[0][2];
	}
	if(IsFULL(board,row,col))//定义一个函数判断棋盘是否为满
	{
		return 'F';
	}
	return 'N';

}
void ComputerMove(char board[][COL],int row,int col)//随机数
{
	while(1)
	{
		int x=rand()%3;
		int y=rand()%3;
		if(board[x][y]==' ')
		{
			board[x][y]== C_CLR;
			break;
		}
	}
}



void Game()
{
	char board[ROW][COL];//棋盘,二维数组
	InitBoard(board,ROW,COL);//定义一个函数初始化棋盘，1
	static int x=0;
	static int y=0;
	static char win=0;
	srand((unsigned long)time(NULL));//种随机数种子

	do{
		ShowBoard(board,ROW,COL);//定义一个棋盘显示函数,2
		printf("请输入你的落子位置<x,y> ");
		scanf("%d %d",&x,&y);
		if(x<=0||x>3||y<=0||y>3)//判断输入的位置是否有误[1-3]
		{
			printf("你输入的位置有误，请重新输入！\n");
			continue;
		}
		if(board[x-1][y-1]!=' ')//判断位置是否被占用[0-n],不等于空格
		{
		printf("你输入的位置已被占用，请重新输入！\n");
		    continue;
		}
		board[x-1][y-1]=P_CLR;//人落子

		win=Judge(board,ROW,COL);//定义函数判定是否赢'X'人赢'O'电脑赢'F'棋盘满'N'继续,3
		if(win != 'N')
		{
			break;//用户走完
		}
		
	ComputerMove(board,ROW,COL);//定义函数表示电脑走,4
	win=Judge(board,ROW,COL);//定义函数判定是否赢'X'人赢'O'电脑赢'F'棋盘满'N'继续
		if(win != 'N')
		{
			break;//电脑走完
		}

	}while(1);
	if(win==P_CLR)
	{
		printf("恭喜你，你赢了！\n");
	}
	else if(win ==C_CLR)
	{
		printf("很遗憾，你输了！\n");
	}
	else
	{
		printf("平局！\n");
	}

}
